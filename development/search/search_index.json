{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#robot-hackathon-facilitator-guide","title":"Robot Hackathon Facilitator Guide","text":""},{"location":"impressum/","title":"Impressum","text":""},{"location":"impressum/#impressum","title":"Impressum","text":"<p>Red Hat Limited 6700 Cork Airport Business Park Kinsale Road Cork Republic of Ireland Tel: +353 (0)21-2303400 Fax: +353 (0)21-2303400 Email: info@redhat.de</p> <p>Umsatzsteueridentifikationsnummer: IE6324873V Eingetragen im Handelsregister der Republik Irland unter Nummer 304873 Vertreten durch den Gesch\u00e4ftsf\u00fchrer: Michael O'Neill</p> <p>Anfragen zu unseren Produkten und Leistungen in Deutschland richten Sie bitte an:</p> <p>Red Hat GmbH Technopark II, Haus C Werner-von-Siemens-Ring 12 85630 Grasbrunn  Tel: +49 (0)89-205071-0 Fax: +49 (0)89-205071-111 Email: info@redhat.de  Umsatzsteueridentifikationsnummer : DE 329796935 Handelsregister: Amtsgericht M\u00fcnchen HRB 153243 Gesch\u00e4ftsf\u00fchrer: Ryan Barnhart, Charles Cachera, Michael O'Neill, Amy Ross</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tags","title":"Tags","text":""},{"location":"component/","title":"Component","text":""},{"location":"component/#component","title":"Component","text":""},{"location":"component/robot/","title":"Robot","text":""},{"location":"component/robot/#setup-robot-from-scratch","title":"Setup Robot from Scratch","text":"<p>This should only be neccessary with a new robot or when repairing/updating/replacing a robot.</p>"},{"location":"component/robot/#install-image-and-prepare-robot","title":"Install image and prepare robot","text":"<ul> <li>Download image Ubuntu 22.04, Microshift 4.8 : https://drive.google.com/file/d/139K2DgZnrxKIiAU-ErjdPXQHGoGOXubV</li> <li>Write to SD Card, will be resized to SD Card size at first boot     <pre><code>gunzip robot-hackathon-image.20240726.img.gz\nsudo dd if=robot-hackathon-image.20240726.img of=/dev/sdXXX status=progress\n</code></pre></li> <li>The image will be resized to SD card size on first boot  </li> <li>The image is preconfigured with:</li> <li>Automatic connection to the hackathon WIFI \"robot-hackathon-78b09\"</li> <li>Robot hackathon SSH key (Bitwarden Collection)</li> </ul>"},{"location":"component/robot/#network-setup","title":"Network Setup","text":"<ul> <li>If you want to configure another WIFI, attach a network cable and SSH into the robot (root /  from Bitwarden collection) </li> <li> <p>For WLAN edit /etc/netplan/50-cloud-init.yaml and add your WLAN access point, reboot or run <code>netplan apply</code>. Config example:</p> <pre><code>network:\n    ethernets:\n        eth0:\n            dhcp4: true\n            optional: true\n    version: 2\n    Wifis:\n        wlan0:\n        access-points: \n        \"robot-hackathon-78b09\":\n            password: \"PASSWORD\"\n        \"otherssid\":\n            password: \"&lt;PASSWORD&gt;\"\n        dhcp4: true\n</code></pre> </li> </ul>"},{"location":"component/robot/#finish-configuration","title":"Finish configuration","text":"<p>To finish the configuration, run the Playbook <code>[automation/configure-robot.yaml](https://github.com/cloud-native-robotz-hackathon/infrastructure/blob/main/automation/configure-robot.yaml)</code> against the robot.</p> <p>Example inventory:</p> <pre><code>---\nall:\n  vars:\n    ansible_user: root\n    ansible_ssh_private_key_file: ~/.ssh/robot-hackathon\n\nrobots:\n  hosts:\n    abcwarrior.lan:\n      team: team-1\n</code></pre> <p>Run Ansible:</p> <pre><code>robot-hackathon/infrastructure/automation$ ansible-navigator run configure-robot.yaml -i myinventory.yaml \n</code></pre> <p>And again to reset Microshift</p> <pre><code>robot-hackathon/infrastructure/automation$ ansible-navigator run microshift-reset.yaml -i myinventory.yaml \n</code></pre>"},{"location":"component/robot/#camera-setup-raspi-camera-v2","title":"Camera Setup (Raspi camera v2)","text":"<p>Playbook camera-test.yaml is here https://github.com/cloud-native-robotz-hackathon/infrastructure/tree/main/robot</p> <ul> <li>Cable orientation: blue \u201cbar\u201d on cable oriented to USB ports, blue bar at camera away from lens</li> <li>Test camera is detected: vcgencmd get_camera</li> <li>Script to test image acquisition</li> </ul> <pre><code>  import cv2\n  # open camera\n  cap = cv2.VideoCapture('/dev/video0', cv2.CAP_V4L)\n\n  # set dimensions\n  cap.set(cv2.CAP_PROP_FRAME_WIDTH, 2560)\n  cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1440)\n\n  # take frame\n  ret, frame = cap.read()\n  # write frame to file\n  cv2.imwrite('/root/ramfilesystem/image.jpg', frame)\n  # release camera\n  cap.release()\n</code></pre>"},{"location":"component/robot/#microshift","title":"Microshift","text":"<p>Playbook microshift-reset.yaml is here https://github.com/cloud-native-robotz-hackathon/infrastructure/tree/main/robot</p> <ul> <li>To reset Microshift: systemctl stop microshift.service; rm -rf /var/lib/microshift; systemctl start microshift.service</li> <li>To use oc locally: export KUBECONFIG=/var/lib/microshift/resources/kubeadmin/kubeconfig</li> <li>Or cat /var/lib/microshift/resources/kubeadmin/kubeconfig &gt; ~/.kube/config</li> </ul>"},{"location":"component/robot/#triton","title":"Triton","text":"<p>https://docs.nvidia.com/deeplearning/triton-inference-server/user-guide/docs/getting_started/quickstart.html</p> <p>Check model <code>curl --location --request GET 'http://localhost:8000/v2/models/densenet_onnx/stats'</code></p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#development","title":"Development","text":""},{"location":"development/#onboarding","title":"Onboarding","text":"<ul> <li>Add to rover groups:<ul> <li>robot-hackathon to have access to the Bitwarden collection Robot hackathon</li> <li>rhpds-devs-cloud-native-robot to have access to the test and development tiles in demo.redhat.com</li> </ul> </li> </ul>"},{"location":"development/local/","title":"Local Development","text":""},{"location":"development/local/#local-development","title":"Local Development","text":"<p>The goal is to improve the Workshops with just</p> <ul> <li>A cluster at demo.redhat.com (Data Center)</li> <li>OpenShift Local / CRC on your Laptop  (Edge gateway)</li> <li>One Robot</li> </ul>"},{"location":"development/local/#prepare-the-robot","title":"Prepare the robot","text":""},{"location":"development/local/#connect-robot-to-your-network-wired","title":"Connect Robot to your Network (Wired)","text":"<ul> <li>Connect to wired network &amp; findout ip address</li> <li>Connect via SSH (wire) to robot</li> <li>The robot private keyfile needs to be named ~/.ssh/robot-hackathon</li> </ul>"},{"location":"development/local/#update-inventory","title":"Update inventory","text":"<p>In <code>automation/inventory.yaml</code> update the section:</p> <p>From </p><pre><code>robots:\n  hosts:\n    gort:\n      ansible_host: 192.168.8.105\n      team: team-1\n    t-1000:\n      ansible_host: 192.168.8.106\n      team: team-2\n    marvin:\n      ansible_host: 192.168.8.104\n      team: team-3\n    c3po:\n      ansible_host: 192.168.8.109\n      team: team-4\n    r2d2:\n      ansible_host: 192.168.8.108\n      team: team-5\n    marc13:\n      ansible_host: 192.168.8.107\n      team: team-6\n    data:\n      ansible_host: 192.168.8.103\n      team: team-7\n    terminator:\n      ansible_host: 192.168.8.100\n      team: team-8\n    ultron:\n      ansible_host: 192.168.8.102\n      team: team-9\n</code></pre><p></p> <p>to  </p><pre><code>robots:\n  hosts:\n    your-robot:\n      ansible_host: 192.168.66.70 \n      team: team-1\n</code></pre><p></p>"},{"location":"development/local/#reset-microshift-at-the-robot","title":"Reset MicroShift at the Robot","text":"<p>At the cloud-native-robotz-hackathon/infrastructure repo:</p> <pre><code>cd automation\nansible-navigator run ./microshift-reset.yaml\n</code></pre>"},{"location":"development/local/#bring-data-center-robot-together","title":"Bring Data Center &amp; Robot together","text":"<p>At the cloud-native-robotz-hackathon/infrastructure repo:</p>"},{"location":"development/local/#create-connection-between-data-center-and-local-env","title":"Create connection between data-center and local env","text":"<pre><code>cd automation\nexport KUBECONFIG=$(pwd)/kubeconfig-data-center\noc login -u admin --insecure-skip-tls-verify https://api.cluster-...\n\n# Run\nansible-navigator run ./skupper-tunnel.yaml\n\n# Connect robots and teams / ArgoCD\n\nansible-navigator run ./update-robot-to-team.yaml \n</code></pre>"},{"location":"development/local/#testing-the-robot-calls","title":"Testing the Robot Calls","text":"<p>You can test the calls bei adding the hostname or ip of the robot as user_key.</p> <p>Now test the API Connection from the DC Cluster, for example from the WebTerminal (make sure to replace data your user_key) :</p> <pre><code>curl http://api.hub-controller.svc.cluster.local./robot/status?user_key=your-robot\n\ncurl -X 'POST' 'http://api.hub-controller.svc.cluster.local./robot/forward/1' -H 'accept: text/html' -H 'Content-Type: application/x-www-form-urlencoded' -d 'user_key=your-robot'\n</code></pre>"},{"location":"development/local/#custom-user_key-mapping","title":"Custom user_key Mapping","text":"<p>If you want to map other user_key to the robot you can set up a mapping:</p> <p>In your Data Center open the ConfigMap <code>robot-mapping-configmap</code> in namespace <code>hub-controller</code> and edit the Roboname (user_key) mapping (e.g. data) to your Robot hostname (e.g. data.lan)</p> <p>Restart the Hubcontroller Pod.</p>"},{"location":"run-a-event/","title":"Run a Event","text":""},{"location":"run-a-event/#run-a-hackathon","title":"Run a Hackathon","text":"Check When What Before 1-2 Days Order OpenShift Data Center env Before 1-2 Days Adjust OpenShift design Location Setting up the environment"},{"location":"run-a-event/#order-openshift-data-center-env","title":"Order OpenShift Data Center env","text":"<p>This includes deploying the hackathon environment in demo.redhat.com and making sure an Edge Gateway is available.</p> Field Value OpenShift User Count <code>9</code> Region Close as possible: <code>eu-central-1</code> GPU Worker Nodes (one GPU per Worker!) For testing puropose only, workshop is not prepred to use GPU's! Enable workshop user interface True"},{"location":"run-a-event/#adjust-openshift-design","title":"Adjust OpenShift design","text":"<ul> <li> <p>Login in into OpenShift Cluster (data-center)</p> </li> <li> <p>Go to <code>datacenter/cluster-configuration/base/namespace/openshift-config/Secret</code></p> </li> <li>Adjust errors-template.html, login-template.html and providers-template.html</li> <li> <p>Run <code>./update-secrets.sh</code></p> </li> <li> <p>Go to <code>datacenter/cluster-configuration/base/namespace/openshift-config/ConfigMap</code></p> </li> <li>Adjust openshift-robot.png (Optional the openshift-robot.xcf via Gimp and export as png )</li> <li> <p>Run <code>./update-secrets.sh</code></p> </li> <li> <p>Commit all changes and push it.</p> </li> <li>Open ArgoCD and refresh and sync cluster-configuration </li> </ul>"},{"location":"run-a-event/#setting-up-the-environment","title":"Setting up the environment","text":""},{"location":"run-a-event/#wifi-router","title":"Wifi Router","text":"<ul> <li>Start the Wifi router and attach to the local Wifi or wire</li> <li>SSID: <code>robot-hackathon-78b09</code></li> <li>Wifi-Password: Stored in RH Bitwarden collection</li> <li>The router is a preconfigured GL.iNet AXT1800, the configuration to restore is here (always use latest!): gDrive router backup (RH internal only)</li> <li>Check connectivity to Internet</li> </ul>"},{"location":"run-a-event/#robots","title":"\ud83e\udd16 Robot's","text":"<ul> <li>Unpack all Robots</li> <li>Attach robots to power and start up</li> <li>Boot all Robots.</li> <li>Wait a couple of minutes...</li> <li>Connect your Laptop to Wifi <code>robot-hackathon-78b09</code></li> <li>Check connection via ansile</li> </ul> Details    At the infrastructure repo:    <pre><code>% ansible-navigator run ./ping-all.yaml\n...\n</code></pre>    And let it dance via:    <pre><code>% ansible-navigator run ./move-robots.yaml\n...\n</code></pre>"},{"location":"run-a-event/#openshift-edge-gateway","title":"OpenShift Edge Gateway","text":"<p>The Edge Gateway is a OCP SNO instance running on-premise in the same Wifi network as the robots. All connections from the hackathon OCP cluster to the robots go through it.</p> <p>It is usually prepared and ready to use. Just connected the network wire to the router.</p> <ul> <li>Power on after Wifi is available</li> <li>Login into OpenShift Console and check all operators</li> <li>User: kubeadmin</li> <li>Password: stored at bitwarden</li> <li>Login into OpenShift GitOps and check everything is in synced</li> <li>Connect edge-date with data center</li> </ul> Run playbooks...    At the [cloud-native-robotz-hackathon/infrastructure](https://github.com/cloud-native-robotz-hackathon/infrastructure) repo:    <pre><code>cd infrastructure/automation/\n\n# Login into data center\nexport KUBECONFIG=kubeconfig-data-center\noc login -u admin --insecure-skip-tls-verify https://api.cluster-...\n\n# Login into edge gateway\nexport KUBECONFIG=kubeconfig-edge-gateway\noc login -u admin --insecure-skip-tls-verify https://edge-gateway.lan:6443\n\n# Optional: Adjust robot to team configuration\nvim inventory.yaml\n\n# Run playbook\nansible-navigator run new-data-center.yaml  [-l &lt;select location / specific robot&gt;]\n</code></pre>    Tip: If the playbook fails, this is propably due to a [bug](https://github.com/cloud-native-robotz-hackathon/infrastructure/issues/66) where the Interconnect Controller doesn't initalize correctly. You can restart the Interconnect Pod (skupper-site-controller-xxx...) in the openshift-operators project as a workaround. Once done, rerun the Ansible playbook.     <ul> <li>Check all argocd applications at edge-gateway: https://openshift-gitops-server-openshift-gitops.apps.edge-gateway.lan/</li> </ul>"},{"location":"run-a-event/#assign-team-e-mails-to-data-center-users","title":"Assign team E-Mails to data center users","text":"E-Mail User team-1@example.com team-1 team-2@example.com team-2 team-3@example.com team-3 team-4@example.com team-4 team-5@example.com team-5 team-6@example.com team-6 team-7@example.com team-7 team-8@example.com team-8 team-9@example.com team-9"},{"location":"run-a-event/#run-the-hackathon","title":"Run the Hackathon","text":"<p>Have fun!</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#troubleshooting","title":"Troubleshooting","text":""},{"location":"troubleshooting/#runtimes-missing-from-some-datasience-projects","title":"Runtimes missing from some DataSience projects","text":""},{"location":"troubleshooting/#solution","title":"Solution","text":"<ul> <li>Delete Workbench</li> <li>Check if pipelineserver is running</li> <li>Recreate Workbench</li> </ul>"},{"location":"troubleshooting/#red-hat-service-internect-problems","title":"Red Hat Service Internect problems","text":""},{"location":"troubleshooting/#check-site-controller-pods","title":"Check Site controller pods","text":"<pre><code>oc logs -n openshift-operators deployment/skupper-site-controller\n</code></pre> <p>If you see something like this</p> <pre><code>2025/01/24 14:06:52 Initialising skupper site ...\n2025/01/24 14:06:52 Error initialising skupper: OpenShift cluster not detected for --ingress type route\nE0124 14:06:52.543358 1 controller.go:204] OpenShift cluster not detected for --ingress type route\n2025/01/24 14:06:54 Handling token request for red-hat-service-interconnect-data-center/edge-gateway\n2025/01/24 14:06:54 Generating token for request edge-gateway...\n2025/01/24 14:06:54 Failed to generate token for request edge-gateway: Skupper is\n</code></pre> <p>=&gt; Restart the pod</p>"},{"location":"troubleshooting/#runtimes-missing-from-some-ds-projects","title":"Runtimes missing from some DS projects","text":"<p>In short: Re-create workbench</p> <ul> <li>Delete Workbench</li> <li>Check if pipeline server is running</li> <li>Recreate Workbench<ul> <li>Use the pre-existing PVC</li> </ul> </li> </ul>"}]}