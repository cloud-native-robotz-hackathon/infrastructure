---
- hosts: robots
  gather_facts: false
  tasks:

    - name: Fetch kubeconfig
      ansible.builtin.fetch:
        src: "/var/lib/microshift/resources/kubeadmin/kubeconfig"
        dest: "kubeconfig-{{ inventory_hostname }}"
        flat: yes

    - name: Read kubeconfig
      connection: local
      include_vars:
        file: "kubeconfig-{{ inventory_hostname }}"
        name: kubeconfig

    - name: Rebuild new kubeconfig
      set_fact:
        kubeconfig: "{{ kubeconfig | combine(fields_to_change, recursive=true) }}"
      vars:
        fields_to_change:
          clusters:
            - name: "{{ inventory_hostname.split('.') | first }}"
              cluster:
                server: "https://{{ inventory_hostname }}:6443"
                insecure-skip-tls-verify: true
          contexts:
            - name: "{{ inventory_hostname.split('.') | first }}"
              context: 
                cluster: "{{ inventory_hostname.split('.') | first }}"
                namespace: "default"
                user: "user"
          current-context: "{{ inventory_hostname.split('.') | first }}"
  
    - name: "Write kubeconfig-{{ inventory_hostname }}"
      connection: local
      copy:
        content: "{{ kubeconfig | to_nice_yaml }}"
        dest: "kubeconfig-{{ inventory_hostname }}"


    - name: Build config
      ansible.builtin.set_fact:
        config: |
          {
            "tlsClientConfig": {
              "insecure": true,
              "certData": "{{ kubeconfig.users[0].user['client-certificate-data'] }}",
              "keyData": "{{ kubeconfig.users[0].user['client-key-data'] }}"
            }
          }

    - name: Create a argocd cluster secret
      connection: local
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "cluster-{{ inventory_hostname }}"
            namespace: openshift-gitops
            labels:
              argocd.argoproj.io/secret-type: cluster
          stringData:
            name: "{{ inventory_hostname }}"
            server: "https://{{ inventory_hostname }}:6443"
            config: "{{ config | to_json  }}"