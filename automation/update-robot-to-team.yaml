---
- hosts: robots
  gather_facts: false
  tasks:

    - name: Check is team is defined
      fail: 
        msg: Please configure a team for the robot!
      when: team is not defined

    - name: Fetch kubeconfig
      ansible.builtin.fetch:
        src: "/var/lib/microshift/resources/kubeadmin/kubeconfig"
        dest: "kubeconfig-{{ inventory_hostname }}"
        flat: yes

    - name: Read kubeconfig
      connection: local
      include_vars:
        file: "kubeconfig-{{ inventory_hostname }}"
        name: kubeconfig

    - name: Rebuild new kubeconfig
      set_fact:
        kubeconfig: "{{ kubeconfig | combine(fields_to_change, recursive=true) }}"
      vars:
        fields_to_change:
          clusters:
            - name: "{{ inventory_hostname.split('.') | first }}"
              cluster:
                server: "https://{{ inventory_hostname }}:6443"
                insecure-skip-tls-verify: true
          contexts:
            - name: "{{ inventory_hostname.split('.') | first }}"
              context: 
                cluster: "{{ inventory_hostname.split('.') | first }}"
                namespace: "default"
                user: "user"
          current-context: "{{ inventory_hostname.split('.') | first }}"
  
    - name: "Write kubeconfig-{{ inventory_hostname }}"
      connection: local
      copy:
        content: "{{ kubeconfig | to_nice_yaml }}"
        dest: "kubeconfig-{{ inventory_hostname }}"


    - name: Build config
      ansible.builtin.set_fact:
        config: |
          {
            "tlsClientConfig": {
              "insecure": true,
              "certData": "{{ kubeconfig.users[0].user['client-certificate-data'] }}",
              "keyData": "{{ kubeconfig.users[0].user['client-key-data'] }}"
            }
          }

    - name: Create a argocd cluster secret
      connection: local
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "cluster-{{ inventory_hostname }}"
            namespace: openshift-gitops
            labels:
              argocd.argoproj.io/secret-type: cluster
          stringData:
            name: "{{ inventory_hostname }}"
            server: "https://{{ inventory_hostname }}:6443"
            config: "{{ config | to_json  }}"


    - name: Get git url from data-center
      connection: local
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-data-center"
        api_version: route.openshift.io/v1
        kind: Route
        name: gitea
        namespace: gitea
      register: gitea_route

    # - debug:
    #     var: gitea_route.resources[0].spec.host
  
    # - debug:
    #     var: team  

    - name: Apply AppProject to edge-gateway
      connection: local
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: AppProject
          metadata:
            name: "{{ team }}"
            namespace: openshift-gitops
          spec:
            clusterResourceWhitelist:
            - group: '*'
              kind: '*'
            namespaceResourceWhitelist:
            - group: '*'
              kind: '*'
            destinations:
            - name: '*'
              namespace: '*'
              server: https://{{ inventory_hostname }}:6443
            roles:
            - groups:
              - system:authenticated:oauth
              name: "{{ team }}-admin"
              policies:
              - "p, proj:{{ team }}:{{ team }}-admin, applications, *, {{ team }}/*, allow"
            sourceRepos:
            - '*'

    - name: Apply Application to edge-gateway
      connection: local
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: "{{ team }}-robot-gitops"
            namespace: openshift-gitops
          spec:
            destination:
              server: "https://{{ inventory_hostname }}:6443"
            project: "{{ team }}"
            source:
              path: base/
              repoURL: "https://{{ gitea_route.resources[0].spec.host }}/{{ team }}/robot-gitops.git"
              targetRevision: HEAD
            syncPolicy:
              automated: {}
              syncOptions:
              - CreateNamespace=true
