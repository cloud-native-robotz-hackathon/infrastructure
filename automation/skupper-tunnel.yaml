---
- hosts: localhost
  gather_facts: false
  connection: local
  tasks:

    - name: Destroy a namespaces
      tags:
        - destroy
      with_items:
        - edge-gateway
        - data-center
      kubernetes.core.k8s:
        state: absent
        wait: true
        kubeconfig: "kubeconfig-{{ item }}"
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: red-hat-service-interconnect-{{ item }}
          spec: {}

    - name: Restart skupper-site-controller
      with_items:
        - edge-gateway
        - data-center
      kubernetes.core.k8s:
        state: absent
        kubeconfig: "kubeconfig-{{ item }}"
        namespace: openshift-operators
        api_version: v1
        kind: Pod
        label_selectors:
          - app.kubernetes.io/name=skupper-site-controller
        wait_condition:
          type: Ready
          status: 'True'
  
    - name: Create a namespaces
      with_items:
        - edge-gateway
        - data-center
      kubernetes.core.k8s:
        state: present
        wait: true
        kubeconfig: "kubeconfig-{{ item }}"
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: red-hat-service-interconnect-{{ item }}
          spec: {}

    - name: Start skupper at data-center
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-data-center"
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: skupper-site
            namespace: red-hat-service-interconnect-data-center
          data:
            cluster-permissions: "false"
            console: "true"
            console-authentication: internal
            console-password: ""
            console-user: ""
            enable-skupper-events: "true"
            flow-collector: "true"
            ingress: route
            name: red-hat-service-interconnect-data-center
            router-console: "false"
            router-logging: ""
            router-mode: interior
            service-controller: "true"
            service-sync: "true"

    - name: Start skupper at edge-gateway
      kubernetes.core.k8s:
        kubeconfig: "kubeconfig-edge-gateway"
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: skupper-site
            namespace: red-hat-service-interconnect-edge-gateway
          data:
            cluster-permissions: "true"
            console: "false"
            console-authentication: internal
            console-password: ""
            console-user: ""
            enable-skupper-events: "true"
            flow-collector: "false"
            ingress: route
            name: red-hat-service-interconnect-edge-gateway
            router-console: "false"
            router-logging: ""
            router-mode: interior
            service-controller: "true"
            service-sync: "true"

    - name: Wait for skupper-site
      with_items:
        - edge-gateway
        - data-center
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-{{ item }}"
        namespace: "red-hat-service-interconnect-{{ item }}"
        api_version: v1
        kind: Pods
        label_selectors:
          app.kubernetes.io/part-of=skupper
        wait: true
        wait_condition:
          type: Ready

    - name: Token request for edge-gateway
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-data-center"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            namespace: red-hat-service-interconnect-data-center
            labels:
              skupper.io/type: connection-token-request
            name: edge-gateway

    - name: Fetch secret from data-center
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-data-center"
        api_version: v1
        kind: Secret
        name: edge-gateway
        namespace: red-hat-service-interconnect-data-center
      register: token_secret
      retries: 10
      until: token_secret.resources[0].metadata.labels['skupper.io/type'] == "connection-token"

    - name: Extract & change token
      ansible.builtin.set_fact:
        token: "{{ token_secret.resources[0] | combine(to_change, recursive=true)  }}"
      vars:
        to_change:
          metadata:
            namespace: red-hat-service-interconnect-edge-gateway
            resourceVersion:
            uid:
            creationTimestamp:

    - name: Apply token at edge-gateway
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        definition: "{{ token  }}"

    # skupper expose --target-namespace hub-controller deployment hub-controller-live  --port 8080
    - name: Expose hub-controller-live
      kubernetes.core.k8s:
        kind: ConfigMap
        state: present
        kubeconfig: "kubeconfig-edge-gateway"
        name: skupper-services
        namespace: red-hat-service-interconnect-edge-gateway
        resource_definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: skupper-services
            namespace: red-hat-service-interconnect-edge-gateway
          data:
            hub-controller-live: '{"address":"hub-controller-live","protocol":"tcp","ports":[8080],"exposeIngress":"","targets":[{"name":"hub-controller-live","selector":"app=hub-controller-live","targetPorts":{"8080":8080},"namespace":"hub-controller"}]}'

    - name: Expose hub-controll-live via route for testing purpose
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-data-center"
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: thbc
            namespace: red-hat-service-interconnect-data-center
          spec:
            port:
              targetPort: port8080
            tls:
              insecureEdgeTerminationPolicy: Redirect
              termination: edge
            to:
              kind: Service
              name: hub-controller-live
              weight: 100
            wildcardPolicy: None

    - name: Run check pod
      tags: 
        - check
      kubernetes.core.k8s:
        state: present
        kubeconfig: "kubeconfig-data-center"
        wait: true
        wait_condition:
          type: Initialized
          reason: "PodCompleted"
        definition:
          apiVersion: v1
          kind: Pod
          metadata:
            generateName: check-skupper-connect
            namespace: red-hat-service-interconnect-data-center
          spec:
            restartPolicy: Never
            containers:
              - name: checker
                image: registry.access.redhat.com/ubi9/ubi-minimal:latest
                command:
                  - "/bin/sh"
                  - "-c"
                  - "curl http://hub-controller-live.red-hat-service-interconnect-data-center.svc.cluster.local:8080/"