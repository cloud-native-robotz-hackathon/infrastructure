---
- hosts: robots
  gather_facts: false
  tasks:
    - name: "🤖 Robot  => http://robot.local:5000/"
      with_items:
        - /distance
        - /
      tags:
        - robots
      ansible.builtin.uri:
        url: "http://robot.local:5000{{ item }}"
        method: GET

    - name: "💻 Laptop => 🤖 Robot http://🤖:5000/"
      with_items:
        - /distance
        - /
      tags:
        - robots
      delegate_to: localhost
      ansible.builtin.uri:
        url: "http://{{ ansible_host }}:5000{{ item }}"
        method: GET

- hosts: datacenter
  gather_facts: false
  connection: local
  tasks:
    - name: "🏢 DataCenter - Check robot service"
      tags:
        - datacenter
      with_items: "{{ hostvars[inventory_hostname].groups.robots }}"
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-data-center"
        namespace: "robot"
        api_version: v1
        kind: Service
        name: "{{ item }}"
        wait: true

    - name: "🏢 DataCenter - Get web-hub-controller"
      tags:
        - datacenter
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-data-center"
        namespace: "hub-controller"
        api_version: v1
        kind: Route
        name: "web"
        wait: true
      register: web_hub_controller

    - name: "💻 Laptop => 🏢 DataCenter (web-hub-controller) => 🤖 Robot's"
      with_items: "{{ hostvars[inventory_hostname].groups.robots }}"
      tags:
        - datacenter
      ansible.builtin.uri:
        url: "https://{{ web_hub_controller.resources[0].spec.host }}/robot/status?user_key={{ item  }}"
        method: GET

    - name: "💻 Laptop => web-hub-controller dashboard "
      tags:
        - datacenter
      ansible.builtin.uri:
        url: "https://{{ web_hub_controller.resources[0].spec.host }}/dashboard.html"
        method: GET


    - name: "🏢 DataCenter => Fetch argocd applications"
      tags:
        - datacenter
      kubernetes.core.k8s_info:
        kubeconfig: "kubeconfig-data-center"
        api_version: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
      register: application

    # - debug: var=item
    #   with_items: "{{ application.resources }}"

    - name: "🏢 DataCenter => Check argocd applications"
      tags:
        - datacenter
      fail:
        msg: "Sync is {{ item.status.sync.status }}"
      when: item.status.sync.status is not search("Synced")
      with_items: "{{ application.resources }}"

    # - name: "🏢 DataCenter via skupper to 🏭 Edge-gateway(hub-controller-live) to 🤖 Robot"
    #   tags:
    #     - datacenter
    #   with_items: "{{ hostvars[inventory_hostname].groups.robots }}"
    #   kubernetes.core.k8s:
    #     state: present
    #     kubeconfig: "kubeconfig-data-center"
    #     wait: true
    #     wait_condition:
    #       type: Initialized
    #       reason: "PodCompleted"
    #     definition:
    #       apiVersion: v1
    #       kind: Pod
    #       metadata:
    #         generateName: check-connection-to-{{ item | split('.') | first }}-
    #         namespace: red-hat-service-interconnect-data-center
    #       spec:
    #         restartPolicy: Never
    #         containers:
    #           - name: checker
    #             image: registry.access.redhat.com/ubi9/ubi-minimal:latest
    #             command:
    #               - "/bin/sh"
    #               - "-c"
    #               - |
    #                   set -x
    #                   curl -v http://hub-controller-live.red-hat-service-interconnect-data-center.svc.cluster.local:8080/robot/status?user_key={{ item  }}
    #                   echo
